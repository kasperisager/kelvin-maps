// ------------------------------------------------------------------------- //
// Project configuration
// ------------------------------------------------------------------------- //

def namespace = "dk.itu.kelvin"
def mainClass = "${namespace}.Main"
def namespaceDir = namespace.replaceAll("\\.", "/")
def apiName = "Kelvin Maps API"

// ------------------------------------------------------------------------- //
// Dependency configuration
// ------------------------------------------------------------------------- //

buildscript {
  // Build step dependency repositories.
  repositories {
    mavenCentral()
  }

  // Build step dependencies.
  dependencies {
    classpath group: "net.carlosgsouza", name: "gradle-console", version: "1.+"
    classpath group: "com.github.houbie", name: "lesscss-gradle-plugin", version: "1.+"
    classpath group: "org.ajoberstar", name: "gradle-git", version: "1.+"
  }
}

apply plugin: "java"
apply plugin: "application"
apply plugin: "checkstyle"
apply plugin: "console"
apply plugin: "jacoco"
apply plugin: "project-report"
apply plugin: "findbugs"
apply plugin: "lesscss"
apply plugin: "org.ajoberstar.github-pages"

// Runtime dependency repositories.
repositories {
  mavenCentral()
}

// Runetime dependencies.
dependencies {
  compile group: "org.controlsfx", name: "controlsfx", version: "8.+"

  testCompile group: "junit", name: "junit", version: "4.+"
}

// ------------------------------------------------------------------------- //
// Build configuration
// ------------------------------------------------------------------------- //

// Use UTF-8 encoding when compiling Java.
[compileJava, compileTestJava]*.options*.encoding = "UTF-8"

checkstyle {
  toolVersion = "5.9"
}

jar {
  // Include all source code in assembled JAR.
  from sourceSets.main.allSource

  manifest {
    attributes "Main-Class": mainClass
  }
}

// FindBugs config.
tasks.withType(FindBugs) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

// Generate a Gradle wrapper.
task wrapper(type: Wrapper) {
  gradleVersion = "2.3"
}

// Generate Java docs.
task docs(type: Javadoc) {
  title = apiName
  source = sourceSets.main.allJava
}

allprojects {
  // Yell out when encountering deprecation and unchecked warnings.
  tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
  }

  // Force rendering on the GPU.
  tasks.withType(JavaExec) {
    jvmArgs = [
      "-Dprism.forceGPU=true",
      "-Dprism.order=es2",
      /* "-Dprism.order=sw", */
      "-Dprism.verbose=true"
    ]
  }
}

// Main class to run.
mainClassName = mainClass

// ------------------------------------------------------------------------- //
// Plugin configuration
// ------------------------------------------------------------------------- //

// Configure LESS compilation.
lessc {
  sourceDir "src/main/resources/${namespaceDir}/stylesheet"
  include "**/*.less"
  exclude "imports/**/*"
  destinationDir = "${buildDir}/resources/main/${namespaceDir}/stylesheet"
}

// Compile LESS after compiling Java.
compileJava.doLast {
  tasks.lessc.execute()
}

// Push docs and reports to GitHub Pages.
githubPages {
  repoUri = "git@giddy.itu.dk:gruppe-kelvin/kelvin-maps.git"

  pages {
    from "${buildDir}/docs"
    from "${buildDir}/reports"
  }
}
